---

# This workflow will install Python dependencies, run tests and lint with a
# specific Python version
# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test Python package

on:
  push:
    # branches: [ $default-branch ]
    branches-ignore:
      - 'main'
      - 'develop'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    # runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        # os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # all history is needed to crawl it properly
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U poetry
          poetry install
      - name: Test with pytest
        run: |
          poetry run pytest -v
      - name: Install deploy dependencies
        run: |
          python -m pip install -U twine
          poetry self add "poetry-dynamic-versioning[plugin]"
      - name: Build package
        run: |
          poetry run changelog-generator \
            changelog changelog.md \
            --snippets=.snippets \
            --in-place \
            --no-internal
          poetry run changelog2version \
            --changelog_file changelog.md \
            --version_file pcba_helper/version.py \
            --version_file_type py \
            --debug
          poetry build
      - name: Test built package
        run: |
          twine check dist/*.tar.gz
